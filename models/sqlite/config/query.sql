DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS dashboard;
DROP TABLE IF EXISTS task;
DROP TABLE IF EXISTS team;

CREATE TABLE user (
id INTEGER PRIMARY KEY AUTOINCREMENT,
user_name TEXT(60),
email TEXT(255) NOT NULL UNIQUE,
password TEXT(255) NOT NULL,
role TEXT NOT NULL DEFAULT user,
active BOOLEAN NOT NULL DEFAULT true,
verified BOOLEAN NOT NULL DEFAULT false,
updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
team INTEGER,
url_img TEXT,
token_email TEXT,
FOREIGN KEY(team) REFERENCES team(id));

CREATE TABLE dashboard (
id INTEGER PRIMARY KEY AUTOINCREMENT,
name TEXT(60) NOT NULL,
owner_id INTEGER NOT NULL,
created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY(owner_id) REFERENCES user(id));

CREATE TABLE task (
id INTEGER PRIMARY KEY AUTOINCREMENT,
title TEXT(60) NOT NULL,
description TEXT(255),
priority INTEGER DEFAULT 1,
color TEXT(60),
created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
due_date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
assigned_to INTEGER,
dashboard_id INTEGER NOT NULL,
FOREIGN KEY(assigned_to) REFERENCES user(id),
FOREIGN KEY(dashboard_id) REFERENCES dashboard(id));

CREATE TABLE team (
id INTEGER PRIMARY KEY AUTOINCREMENT,
author_id INTEGER NOT NULL,
organization TEXT(255),
members TEXT DEFAULT "[]",
created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY(author_id) REFERENCES user(id));